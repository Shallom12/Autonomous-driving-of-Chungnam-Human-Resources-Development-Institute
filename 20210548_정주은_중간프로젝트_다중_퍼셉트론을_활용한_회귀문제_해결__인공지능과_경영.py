# -*- coding: utf-8 -*-
"""20210548_정주은_중간프로젝트_다중 퍼셉트론을 활용한 회귀문제 해결 _인공지능과_경영.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_WTDfDd94IeT5lCXo-xuTT6z2ODlGXBe
"""

from sklearn.neural_network import MLPRegressor
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_percentage_error
import numpy as np
import matplotlib.pyplot as plt

X = np.array(range(1,101))
print(X)

y = 0.5*(X-50)**3 - 50000/X + 120000
print(y)

plt.scatter(X,y, color = 'b')
plt.title('y= 0.5*(X-50)**3 - 50000/X+120000')
plt.xlabel('X')
plt.ylabel('y')
plt.ylim(0,200000)
plt.show()

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=20210548)

print(X_train)
print(X_test)

print(y_train)
print(y_test)

X_train = X_train.reshape(-1, 1)
X_test = X_test.reshape(-1, 1)
y_train = y_train.reshape(-1, 1)
y_test = y_test.reshape(-1, 1)
print(X_train)

scalerX = MinMaxScaler()
scalerX.fit(X_train)
X_train_norm = scalerX.transform(X_train)

scalerY = MinMaxScaler()
scalerY.fit(y_train)
y_train_norm = scalerY.transform(y_train)

X_test_norm = scalerX.transform(X_test)
y_test_norm = scalerY.transform(y_test)

model= MLPRegressor(hidden_layer_sizes=(15,15),
         activation= 'logistic',
         solver='lbfgs',
         max_iter= 100000
                 )
print(model)

model.fit(X_train_norm,y_train_norm)

y_pred = model.predict(X_test_norm)
print(y_pred)

y_pred= y_pred.reshape(-1,1)

y_pred_inverse = scalerY.inverse_transform(y_pred)
print(y_pred_inverse)

plt.scatter(X,y, color = 'g')
plt.title('y= 0.5*(X-50)**3 - 50000/X+120000')
plt.xlabel('X')
plt.ylabel('y')
plt.ylim(0,200000)

plt.scatter(X_test,y_pred_inverse, color = 'r')
plt.show()

print("MAPE:%.2f"%
      mean_absolute_percentage_error(y_test,y_pred_inverse))

